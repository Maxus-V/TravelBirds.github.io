{"version":3,"file":"static/js/738.f572d1c6.chunk.js","mappings":"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","sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","touches","ONE","TOUCH","TWO","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","this","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","_assertThisInitialized","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","i","splice","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","undefined","pointer","passive","_createClass","EventDispatcher"],"sourceRoot":""}