{"version":3,"file":"static/js/605.6ce794f9.chunk.js","mappings":"iKASIA,EAAQC,EAAOC,EAAUC,EAAOC,EAAWC,E,2DACzCC,EAAS,GAoFTC,EAAiB,WACnBP,EAAOQ,OAAS,EAChBR,EAAOS,yBACPP,EAASQ,QAAS,IAAK,KACvBL,EAAQG,OAAS,EACjBH,EAAQI,yBACRL,EAAUM,QAAS,IAAK,IAC5B,EAEMC,EAAU,SAAVA,IACFC,sBAAuBD,GAEvB,IADA,IAAME,EAAQV,EAAMW,WACpBC,EAAA,EAAAC,EAAqBV,EAAMS,EAAAC,EAAAC,OAAAF,IAAA,CAAVC,EAAAD,GAAmBG,OAAQL,EAAO,CACnDX,EAASiB,OAAQlB,EAAOD,GACxBI,EAAUe,OAAQlB,EAAOI,EAC7B,EAoBA,EAlByB,SAACe,GACtB,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,MASxB,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAWH,EAASI,QAGxB,OAzGK,SAACD,IACVxB,EAAS,IAAI0B,EAAAA,IAAyB,GAAI,EAAG,EAAG,MACzCC,SAASC,IAAK,EAAG,GAAK,GAC7B5B,EAAO6B,OAAQ,EAAG,EAAG,IAErBxB,EAAU,IAAIqB,EAAAA,IAAyB,GAAI,EAAG,EAAG,MACzCC,SAASC,IAAK,EAAG,GAAK,GAC9BvB,EAAQwB,OAAQ,EAAG,EAAG,GAEtB1B,EAAQ,IAAIuB,EAAAA,KACZzB,EAAQ,IAAIyB,EAAAA,KACNI,WAAa,IAAIJ,EAAAA,IAAa,UACpCzB,EAAM8B,IAAM,IAAIL,EAAAA,IAAW,SAAU,GAAI,IAEzC,IAAMM,EAAY,IAAIN,EAAAA,IAAuB,SAAU,SACvDM,EAAUL,SAASC,IAAK,EAAG,GAAI,GAC/B3B,EAAMgC,IAAKD,GAEX,IAAME,EAAW,IAAIR,EAAAA,IAAwB,UAC7CQ,EAASP,SAASC,KAAO,EAAG,IAAM,IAClCM,EAASC,YAAa,EACtBD,EAASE,OAAOpC,OAAOqC,IAAM,EAC7BH,EAASE,OAAOpC,OAAOsC,QAAW,EAClCJ,EAASE,OAAOpC,OAAOuC,MAAS,EAChCL,EAASE,OAAOpC,OAAOwC,MAAQ,EAC/BN,EAASE,OAAOpC,OAAOyC,KAAO,GAC9BP,EAASE,OAAOpC,OAAO0C,IAAM,GAC7BzC,EAAMgC,IAAKC,GAEX,IAAMS,EAAO,IAAIjB,EAAAA,IAAY,IAAIA,EAAAA,IAAqB,IAAK,KAAO,IAAIA,EAAAA,IAAyB,CAAEkB,MAAO,SAAUC,YAAY,KAC9HF,EAAKG,SAASC,GAAMC,KAAKC,GAAK,EAC9BN,EAAKO,eAAgB,EACrBjD,EAAMgC,IAAKU,IAEI,IAAIQ,EAAAA,GACZC,KAAK,sBAAsB,SAACC,GAC/BA,EAAKpD,MAAMqD,UAAU,SAAEC,GACdA,EAAOC,SAASD,EAAOpB,YAAa,EAC7C,IACA,IAAMsB,EAASC,EAAAA,GAAqBL,EAAKpD,OACnC0D,EAAS,IAAIjC,EAAAA,IAAsB+B,GACzCE,EAAOC,WAAYP,EAAKQ,WAAY,IAAMC,OAC1CL,EAAO9B,SAASoC,EAAI,EACpB9D,EAAMgC,IAAKwB,GACXnD,EAAO0D,KAAML,GACbhD,GACJ,QAAGsD,GAAW,SAACC,GACXC,QAAQC,MAAMF,EAClB,KACAhE,EAAW,IAAIwB,EAAAA,IAAqB,CAAE2C,WAAW,KACxCC,cAAeC,OAAOC,kBAC/BtE,EAASQ,QAAS,IAAK,KACvBR,EAASuE,eAAiB/C,EAAAA,IAC1BxB,EAASwE,UAAUC,SAAU,GAC7BvE,EAAY,IAAIsB,EAAAA,IAAqB,CAAE2C,WAAW,KACxCC,cAAeC,OAAOC,kBAChCpE,EAAUM,QAAS,IAAK,KACxBN,EAAUqE,eAAiB/C,EAAAA,IAC3BtB,EAAUsE,UAAUC,SAAU,EAC9BnD,EAASoD,YAAa1E,EAAS2E,YAC/BrD,EAASoD,YAAaxE,EAAUyE,aAEhC7E,EAAS,IAAI0B,EAAAA,IAAyB,GAAI,EAAG,EAAG,MACzCC,SAASC,KAAM,EAAG,GAAI,GAE7B,IAAMkD,EAAW,IAAIC,EAAAA,EAAe/E,EAAQE,EAAS2E,YACrDC,EAASE,WAAY,EACrBF,EAASG,YAAa,EACtBH,EAASI,OAAOtD,IAAK,EAAG,EAAG,GAC3BkD,EAAS5D,UAETb,EAAU,IAAIqB,EAAAA,IAAyB,GAAI,EAAG,EAAG,MACzCC,SAASC,KAAM,EAAG,GAAI,GAC9B,IAAMuD,EAAY,IAAIJ,EAAAA,EAAe1E,EAASD,EAAUyE,YACxDM,EAAUH,WAAY,EACtBG,EAAUF,YAAa,EACvBE,EAAUD,OAAOtD,IAAK,EAAG,EAAG,GAC5BuD,EAAUjE,SAEVqD,OAAOa,iBAAkB,SAAU7E,EACvC,CAuBQ8E,CAAK7D,GACLb,IACO,WACHa,EAAS8D,UAAY,EACzB,CACJ,GAAG,KAECC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACJC,EAAAA,EAAAA,KAAA,OAAKC,IAAKrE,EAAUsE,UAAU,eAG1C,C","sources":["pages/ThreeDimensionV2/index.jsx"],"sourcesContent":["import { useRef, useEffect } from 'react'\n\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js'\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js'\nimport * as SkeletonUtils from 'three/addons/utils/SkeletonUtils.js'\n\nimport './ThreeDimensionV2.less'\n\nlet camera, scene, renderer, clock, renderer1, camera1\nconst mixers = []\n\nconst init = (mycanvas) => {\n    camera = new THREE.PerspectiveCamera( 45, 1, 1, 1000 )\n    camera.position.set( 2, 3, - 6 )\n    camera.lookAt( 0, 1, 0 )\n\n    camera1 = new THREE.PerspectiveCamera( 45, 1, 1, 1000 )\n    camera1.position.set( 2, 3, - 6 )\n    camera1.lookAt( 0, 1, 0 )\n\n    clock = new THREE.Clock()\n    scene = new THREE.Scene()\n    scene.background = new THREE.Color( 0xa0a0a0 )\n    scene.fog = new THREE.Fog( 0xa0a0a0, 10, 50 )\n\n    const hemiLight = new THREE.HemisphereLight( 0xffffff, 0x444444 )\n    hemiLight.position.set( 0, 20, 0 )\n    scene.add( hemiLight )\n\n    const dirLight = new THREE.DirectionalLight( 0xffffff )\n    dirLight.position.set( - 3, 10, - 10 )\n    dirLight.castShadow = true\n    dirLight.shadow.camera.top = 4\n    dirLight.shadow.camera.bottom = - 4\n    dirLight.shadow.camera.left = - 4\n    dirLight.shadow.camera.right = 4\n    dirLight.shadow.camera.near = 0.1\n    dirLight.shadow.camera.far = 40\n    scene.add( dirLight )\n\n    const mesh = new THREE.Mesh( new THREE.PlaneGeometry( 200, 200 ), new THREE.MeshPhongMaterial( { color: 0x999999, depthWrite: false } ) )\n    mesh.rotation.x = - Math.PI / 2\n    mesh.receiveShadow = true\n    scene.add( mesh )\n\n    const loader = new GLTFLoader()\n    loader.load('models/Soldier.glb', (gltf) => {\n        gltf.scene.traverse( ( object ) => {\n            if ( object.isMesh ) object.castShadow = true\n        } )\n        const model1 = SkeletonUtils.clone( gltf.scene )\n        const mixer1 = new THREE.AnimationMixer( model1 )\n        mixer1.clipAction( gltf.animations[ 3 ] ).play()\n        model1.position.z = 4\n        scene.add( model1 )\n        mixers.push( mixer1 )\n        animate()\n    }, undefined, (e) => {\n        console.error(e)\n    })\n    renderer = new THREE.WebGLRenderer( { antialias: true } )\n    renderer.setPixelRatio( window.devicePixelRatio )\n    renderer.setSize( 400, 400 )\n    renderer.outputEncoding = THREE.sRGBEncoding\n    renderer.shadowMap.enabled = true \n    renderer1 = new THREE.WebGLRenderer( { antialias: true } )\n    renderer1.setPixelRatio( window.devicePixelRatio )\n    renderer1.setSize( 400, 400 )\n    renderer1.outputEncoding = THREE.sRGBEncoding\n    renderer1.shadowMap.enabled = true \n    mycanvas.appendChild( renderer.domElement )\n    mycanvas.appendChild( renderer1.domElement )\n\n    camera = new THREE.PerspectiveCamera( 45, 1, 1, 100 )\n    camera.position.set( -1, 2, -3 )\n\n    const controls = new OrbitControls( camera, renderer.domElement )\n    controls.enablePan = false\n    controls.enableZoom = false\n    controls.target.set( 0, 1, 0 )\n    controls.update()\n\n    camera1 = new THREE.PerspectiveCamera( 45, 1, 1, 100 )\n    camera1.position.set( -1, 2, -3 )\n    const controls1 = new OrbitControls( camera1, renderer1.domElement )\n    controls1.enablePan = false\n    controls1.enableZoom = false\n    controls1.target.set( 0, 1, 0 )\n    controls1.update()\n\n    window.addEventListener( 'resize', onWindowResize )\n}\n\nconst onWindowResize = () => {\n    camera.aspect = 1\n    camera.updateProjectionMatrix()\n    renderer.setSize( 400, 400)\n    camera1.aspect = 1\n    camera1.updateProjectionMatrix()\n    renderer1.setSize( 400, 400)\n}\n\nconst animate = () => {\n    requestAnimationFrame( animate )\n    const delta = clock.getDelta()\n    for ( const mixer of mixers ) mixer.update( delta )\n    renderer.render( scene, camera )\n    renderer1.render( scene, camera1 )\n}\n\nconst ThreeDimensionV2 = (props) => {\n    const myCanvas = useRef(null)\n    useEffect(() => {\n        let mycanvas = myCanvas.current\n        init(mycanvas)\n        animate()\n        return () => {\n            mycanvas.innerHTML = \"\"\n        }\n    }, [])\n    return (\n        <div>\n            <h1>233</h1>\n            <div ref={myCanvas} className=\"myCanvas\"></div>\n        </div>\n    )\n}\n\nexport default ThreeDimensionV2"],"names":["camera","scene","renderer","clock","renderer1","camera1","mixers","onWindowResize","aspect","updateProjectionMatrix","setSize","animate","requestAnimationFrame","delta","getDelta","_i","_mixers","length","update","render","props","myCanvas","useRef","useEffect","mycanvas","current","THREE","position","set","lookAt","background","fog","hemiLight","add","dirLight","castShadow","shadow","top","bottom","left","right","near","far","mesh","color","depthWrite","rotation","x","Math","PI","receiveShadow","GLTFLoader","load","gltf","traverse","object","isMesh","model1","SkeletonUtils","mixer1","clipAction","animations","play","z","push","undefined","e","console","error","antialias","setPixelRatio","window","devicePixelRatio","outputEncoding","shadowMap","enabled","appendChild","domElement","controls","OrbitControls","enablePan","enableZoom","target","controls1","addEventListener","init","innerHTML","_jsxs","children","_jsx","ref","className"],"sourceRoot":""}