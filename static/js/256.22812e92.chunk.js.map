{"version":3,"file":"static/js/256.22812e92.chunk.js","mappings":"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","sources":["pages/Demo/webglSkeleton2/index.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\"\n\nimport * as THREE from 'three'\n\nimport { PointerLockControls } from 'three/addons/controls/PointerLockControls.js'\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js'\n\nimport { MTLLoader } from 'three/addons/loaders/MTLLoader.js'\nimport { OBJLoader } from 'three/addons/loaders/OBJLoader.js'\n\nimport \"./style.less\"\n\nlet camera, scene, renderer, controls\n\nconst objects = []\n\nlet threeBox, blocker, instructions\n\nlet model\n\nlet raycaster\n\nlet clock\n\nlet mixer\nlet actions\nconst api = { state: 'Sitting' }\nlet face\nlet activeAction\nlet previousAction\n\nlet moveForward = false\nlet moveBackward = false\nlet moveLeft = false\nlet moveRight = false\nlet canJump = false\n\nlet upRaycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3( 0, 1, 0), 0, 10)\nlet horizontalRaycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(), 0, 10)\nlet downRaycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3( 0, -1, 0), 0, 10)\n\nlet prevTime = performance.now()\nconst velocity = new THREE.Vector3()\nconst direction = new THREE.Vector3()\nconst vertex = new THREE.Vector3()\nconst color = new THREE.Color()\n\nconst init = () => {\n    clock = new THREE.Clock()\n\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000)\n    camera.position.y = 10\n\n    scene = new THREE.Scene()\n    scene.background = new THREE.Color( 0xffffff )\n\tscene.fog = new THREE.Fog( 0xffffff, 0, 750 )\n\n    const light = new THREE.HemisphereLight( 0xeeeeff, 0x777788, 0.75 )\n\tlight.position.set( 0.5, 1, 0.75 )\n    scene.add( light )\n    // scene.add(new THREE.AmbientLight(0x444444))\n    // const light = new THREE.PointLight(0xffffff)\n    // light.position.set(0,50,0)\n    // //告诉平行光需要开启阴影投射\n    // light.castShadow = true\n    // scene.add(light)\n\n    let mtlLoader = new MTLLoader()\n    mtlLoader.load('models/city.mtl', function (material) {\n        var objLoader = new OBJLoader()\n        //设置当前加载的纹理\n        objLoader.setMaterials(material);\n        objLoader.load('models/city.obj', function (object) {\n            //设置颜色的取值范围\n            // var scale = chroma.scale(['yellow', '008ae5']);\n\n            //重新设置纹理颜色\n            // setRandomColors(object, scale);\n            object.position.y = -10\n            object.scale.set(10, 10, 10);\n            //将模型缩放并添加到场景当中\n            scene.add(object);\n        })\n    });\n\n    const loader = new GLTFLoader()\n    loader.load('models/RobotExpressive.glb', ( gltf ) => {\n        model = gltf.scene\n        model.position.y = 1\n        model.position.z = -15\n        model.scale.set(2, 2, 2)\n        model.rotation.y = Math.PI\n        scene.add(model)\n        createGUI(model, gltf.animations)\n    }, undefined,  ( e ) => {\n        console.error( e )\n    })\n\n    controls = new PointerLockControls( camera, threeBox )\n    controls.addEventListener('lock', () => {\n        blocker.style.display = 'none'\n    })\n    controls.addEventListener('unlock', () => {\n        blocker.style.display = 'block'\n    })\n    scene.add( controls.getObject() )\n\n    const onKeyDown = (event) => {\n        switch ( event.code ) {\n            case 'ArrowUp':\n            case 'KeyW':\n                moveForward = true\n                break\n\n            case 'ArrowLeft':\n            case 'KeyA':\n                moveLeft = true\n                break\n\n            case 'ArrowDown':\n            case 'KeyS':\n                moveBackward = true\n                break\n\n            case 'ArrowRight':\n            case 'KeyD':\n                moveRight = true\n                break\n\n            case 'Space':\n                if ( canJump === true ) {\n                    velocity.y += 350\n                } \n                canJump = false\n                break\n        }\n    }   \n\n    const onKeyUp = (event) => {\n        switch ( event.code ) {\n            case 'ArrowUp':\n            case 'KeyW':\n                moveForward = false\n                break\n\n            case 'ArrowLeft':\n            case 'KeyA':\n                moveLeft = false\n                break\n\n            case 'ArrowDown':\n            case 'KeyS':\n                moveBackward = false\n                break\n\n            case 'ArrowRight':\n            case 'KeyD':\n                moveRight = false\n                break\n        }\n    }\n\n    document.addEventListener( 'keydown', onKeyDown )\n    document.addEventListener( 'keyup', onKeyUp )\n\n    raycaster = new THREE.Raycaster( new THREE.Vector3(), new THREE.Vector3( 0, - 1, 0 ), 0, 10 )\n\n    let floorGeometry = new THREE.PlaneGeometry( 2000, 2000, 100, 100 )\n    floorGeometry.rotateX( - Math.PI / 2 )\n\n    let position = floorGeometry.attributes.position\n    for ( let i = 0, l = position.count; i < l; i ++ ) {\n        vertex.fromBufferAttribute( position, i )\n\n        vertex.x += Math.random() * 20 - 10\n        vertex.y += Math.random() * 2\n        vertex.z += Math.random() * 20 - 10\n\n        position.setXYZ( i, vertex.x, vertex.y, vertex.z )\n    }\n    floorGeometry = floorGeometry.toNonIndexed()\n\n    position = floorGeometry.attributes.position\n    const colorsFloor = []\n\n    for ( let i = 0, l = position.count; i < l; i ++ ) {\n        color.setHSL( Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75 )\n        colorsFloor.push( color.r, color.g, color.b )\n    }\n\n    floorGeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colorsFloor, 3 ) )\n    const floorMaterial = new THREE.MeshBasicMaterial( { vertexColors: true } )\n    const floor = new THREE.Mesh( floorGeometry, floorMaterial )\n    scene.add( floor )\n\n    const boxGeometry = new THREE.BoxGeometry( 20, 20, 20 ).toNonIndexed()\n    position = boxGeometry.attributes.position\n    const colorsBox = []\n\n    for ( let i = 0, l = position.count; i < l; i ++ ) {\n        color.setHSL( Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75 )\n        colorsBox.push( color.r, color.g, color.b )\n    }\n\n    boxGeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colorsBox, 3 ) )\n\n    for ( let i = 0; i < 500; i ++ ) {\n        const boxMaterial = new THREE.MeshPhongMaterial( { specular: 0xffffff, flatShading: true, vertexColors: true } )\n        boxMaterial.color.setHSL( Math.random() * 0.2 + 0.5, 0.75, Math.random() * 0.25 + 0.75 )\n\n        const box = new THREE.Mesh( boxGeometry, boxMaterial )\n        box.position.x = Math.floor( Math.random() * 20 - 10 ) * 20\n        box.position.y = Math.floor( Math.random() * 20 ) * 20 + 10\n        box.position.z = Math.floor( Math.random() * 20 - 10 ) * 20\n\n        // scene.add( box )\n        objects.push( box )\n\n    }\n\n    renderer = new THREE.WebGLRenderer()\n    renderer.setPixelRatio( window.devicePixelRatio )\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    threeBox.appendChild(renderer.domElement)\n\n    window.addEventListener( 'resize', onWindowResize )\n\n    animate()\n}\n\nconst createGUI = (model, animations) => {\n    // const states = [ 'Idle', 'Walking', 'Running', 'Dance', 'Death', 'Sitting', 'Standing' ]\n\t// const emotes = [ 'Jump', 'Yes', 'No', 'Wave', 'Punch', 'ThumbsUp' ]\n\n    mixer = new THREE.AnimationMixer( model )\n    actions = {}\n    for ( let i = 0; i < animations.length; i ++ ) {\n        const clip = animations[ i ]\n        const action = mixer.clipAction( clip )\n        actions[ clip.name ] = action\n\n        // if ( emotes.indexOf( clip.name ) >= 0 || states.indexOf( clip.name ) >= 4 ) {\n        //     action.clampWhenFinished = true\n        //     action.loop = THREE.LoopOnce\n        // }\n    }\n\n    // const createEmoteCallback = (name) => {\n    //     api[name] = () => {\n    //         fadeToAction( name, 0.2 )\n    //         mixer.addEventListener( 'finished', restoreState )\n    //     }\n    // }\n\n    // const restoreState = () => {\n    //     mixer.removeEventListener( 'finished', restoreState )\n    //     fadeToAction( api.state, 0.2 )\n    //     console.log('hi')\n    // }\n\n    // for ( let i = 0; i < emotes.length; i ++ ) {\n    //     createEmoteCallback( emotes[ i ] )\n    // }\n\n    activeAction = actions[ 'Idle' ]\n    activeAction.play()\n}\n\n// const fadeToAction = (name, duration) => {\n//     previousAction = activeAction\n// \tactiveAction = actions[ name ]\n//     if ( previousAction !== activeAction ) {\n//         previousAction.fadeOut( duration )\n//     }\n//     activeAction\n//         .reset()\n//         .setEffectiveTimeScale( 1 )\n//         .setEffectiveWeight( 1 )\n//         .fadeIn( duration )\n//         .play()\n// }\n\nconst onWindowResize = () => {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n    renderer.setSize( window.innerWidth, window.innerHeight )\n}\n\nconst animate = () => {\n    const dt = clock.getDelta()\n    if ( mixer ) mixer.update( dt )\n\n    requestAnimationFrame(animate)\n\n    const time = performance.now()\n\n    if ( controls.isLocked === true ) {\n\n        raycaster.ray.origin.copy( controls.getObject().position )\n        raycaster.ray.origin.y -= 10\n\n        const intersections = raycaster.intersectObjects( objects, false )\n\n        const onObject = intersections.length > 0\n\n        const delta = ( time - prevTime ) / 1000\n\n        velocity.x -= velocity.x * 10.0 * delta\n        velocity.z -= velocity.z * 10.0 * delta\n\n        velocity.y -= 9.8 * 100.0 * delta // 100.0 = mass\n\n        direction.z = Number( moveForward ) - Number( moveBackward )\n        direction.x = Number( moveRight ) - Number( moveLeft )\n        direction.normalize() \n\n        if ( moveForward || moveBackward ) {\n            activeAction = actions[ 'Running' ]\n            activeAction.play()\n            velocity.z -= direction.z * 400.0 * delta\n            if (!model) return //模型没加载好，会出现重复渲染\n            model.position.z -= direction.z * 40.0 * delta\n        } else if ( moveLeft || moveRight ) {\n            activeAction = actions[ 'Running' ]\n            activeAction.play()\n            model.rotation.y = Math.PI/2 * direction.x\n            velocity.x -= direction.x * 400.0 * delta\n            if (!model) return\n            model.position.x -= -1 * (direction.x) * 40.0 * delta\n        } else {\n            activeAction.stop()\n            model.rotation.y = Math.PI\n            activeAction = actions[ 'Idle' ]\n            activeAction.play()\n        }\n\n        if ( onObject === true ) {\n            velocity.y = Math.max( 0, velocity.y )\n            canJump = true\n        }\n\n        controls.moveRight( - velocity.x * delta )\n        controls.moveForward( - velocity.z * delta )\n\n        controls.getObject().position.y += ( velocity.y * delta ) // new behavior\n\n        if ( controls.getObject().position.y < 10 ) {\n\n            velocity.y = 0\n            controls.getObject().position.y = 10\n\n            canJump = true\n\n        }\n\n    }\n\n    prevTime = time\n    renderer.render(scene, camera)\n}\n\nconst WebglSkeleton2 = () => {\n    const threeBoxRef = useRef(null)\n    const blockerRef = useRef(null)\n    const instructionsRef = useRef(null)\n\n    useEffect(() => {\n        threeBox = threeBoxRef.current\n        blocker = blockerRef.current\n        instructions = instructionsRef.current\n        init()\n        return () => {\n            threeBox.innerHTML = \"\"\n        }\n    }, [])\n\n    return <div>\n        <div ref={blockerRef} className=\"blocker\">\n\t\t\t<div ref={instructionsRef} className=\"instructions\" onClick={() => controls.lock()}>\n\t\t\t\t<h1>\n\t\t\t\t\tClick to play\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\tMove: WASD<br/>\n\t\t\t\t\tJump: SPACE<br/>\n\t\t\t\t\tLook: MOUSE\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n        <div ref={threeBoxRef}></div>\n    </div>\n}\n\nexport default WebglSkeleton2"],"names":["camera","scene","renderer","controls","threeBox","blocker","model","raycaster","clock","mixer","actions","activeAction","objects","moveForward","moveBackward","moveLeft","moveRight","canJump","prevTime","THREE","performance","now","velocity","direction","vertex","color","createGUI","animations","i","length","clip","action","clipAction","name","play","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","animate","dt","getDelta","update","requestAnimationFrame","time","isLocked","ray","origin","copy","getObject","position","y","onObject","intersectObjects","delta","x","z","Number","normalize","rotation","Math","PI","stop","max","render","threeBoxRef","useRef","blockerRef","instructionsRef","useEffect","current","background","fog","light","set","add","MTLLoader","load","material","objLoader","OBJLoader","setMaterials","object","scale","GLTFLoader","gltf","undefined","e","console","error","PointerLockControls","addEventListener","style","display","document","event","code","floorGeometry","rotateX","attributes","l","count","fromBufferAttribute","random","setXYZ","colorsFloor","toNonIndexed","setHSL","push","r","g","b","setAttribute","floorMaterial","vertexColors","floor","boxGeometry","colorsBox","box","boxMaterial","specular","flatShading","setPixelRatio","devicePixelRatio","appendChild","domElement","innerHTML","_jsxs","children","_jsx","ref","className","onClick","lock"],"sourceRoot":""}